name: Check Core Backport Changlog

on:
    push:
        branches:
            - try/sync-backport-changelog
jobs:
    sync-backport-changelog:
        name: Sync Core backport changelogs to issues
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
              with:
                  ref: ${{ github.event.pull_request.head.ref }}
                  repository: ${{ github.event.pull_request.head.repo.full_name }}
            - name: Sync Issues
              uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
              with:
                  script: |
                      const labelName = 'ðŸ¤– Sync Backport Changelog';
                      const issues = await github.paginate(github.rest.issues.listForRepo, {
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        labels: [labelName],
                        state: 'open',
                        per_page: 1,
                      });

                      if (issues.length === 0) {
                        console.log(`No issues found with the "${labelName}" label.`);
                        return;
                      }

                      const [latestIssue] = issues;
                      const versionMatch = latestIssue.title.match(/(\d+\.\d+)/);
                      if (!versionMatch) {
                        console.log('Could not find a version number in the latest issue title.');
                        return;
                      }

                      const version = versionMatch[1];
                      console.log(`Latest version: ${version}`);

                      const { execSync } = require('child_process');
                      const processedChangelog = execSync(`awk '/./ {print ($0 ~ /^[-*]/ ? "  " : "- ") $0}' backport-changelog/${version}/*.md`).toString();
                      const prependChangelog = `This description is continuously generated by a script. Please do not edit, leave comments instead.\n\n`;
                      const body = prependChangelog + processedChangelog;

                      if (latestIssue.body.trim() !== body) {
                        console.log(processedChangelog);
                        await github.rest.issues.update({
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          issue_number: latestIssue.number,
                          body
                        });
                      } else {
                        console.log('Issue description is already up to date.');
                      }
